`timescale 1ns / 1ns //(1)

module test;         //(2)
CPU2 top();          //(3)

reg CK;              //(4)
integer CK_num;      //(5)

initial
begin

CK = 1'b0;           // Initialization of CK
CK_num = 1;          //Initialization of CK_num
`include "/home/student/s1260250/comp/kadai15/testfixture.include" //(6)
                     // Initialization of Memory

# 50 // Update of CK and CK_num //(7)
# 50 CK = ~CK;
for( CK_num = 2; CK_num <= 200; CK_num= CK_num +1)
   begin
     # 50 CK = ~CK;
     # 50 CK = ~CK;
   end

$display("Simulation Results Start");
$display("PC_out = %h",top.PC_out); //(8)
$display("RF[r1] = %h",top.Registers.regfile[1]); //(9)
$display("MEM['h00000000] = %h",Mem.cell['h00000000]); //(10)
$display("A = MEM['h00005000] = %h",Mem.cell['h00005000]);
$display("B = MEM['h00005004] = %h",Mem.cell['h00005004]);
$display("C = MEM['h00005008] = %h",Mem.cell['h00005008]);
$display("SW_RSLT = MEM['h0000500c] = %h",Mem.cell['h0000500c]);
$display("ADD_RSLT = MEM['h00005010] = %h",Mem.cell['h00005010]);
$display("SUB_RSLT = MEM['h00005014] = %h",Mem.cell['h00005014]);
$display("ADDI_RSLT = MEM['h00005018] = %h",Mem.cell['h00005018]);
$display("AND_RSLT = MEM['h0000501c] = %h",Mem.cell['h0000501c]);
$display("OR_RSLT = MEM['h00005020] = %h",Mem.cell['h00005020]);
$display("ANDI_RSLT = MEM['h00005024] = %h",Mem.cell['h00005024]);
$display("ORI_RSLT = MEM['h00005028] = %h",Mem.cell['h00005028]);
$display("J_RSLT = MEM['h0000502c] = %h",Mem.cell['h0000502c]);
$display("BEQ_NT_RSLT = MEM['h00005030] = %h",Mem.cell['h00005030]);
$display("BEQ_T_RSLT = MEM['h00005034] = %h",Mem.cell['h00005034]);
$display("SLT0_RSLT = MEM['h00005038] = %h",Mem.cell['h00005038]);
$display("SLT1_RSLT = MEM['h0000503c] = %h",Mem.cell['h0000503c]);
$display("SLTI0_RSLT = MEM['h00005040] = %h",Mem.cell['h00005040]);
$display("SLTI1_RSLT = MEM['h00005044] = %h",Mem.cell['h00005044]);
$display("Simulation Results End");
$finish;
end

endmodule

module Mem ();       // (11)
reg [31:0] cell [0:65535];
endmodule

