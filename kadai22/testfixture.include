// text segment
Mem.cell['h00000000] = 32'h08000400;   // j 0x1000

Mem.cell['h00001000] = 32'h37bd7fff;   // ori $29, $29, 32767             ; 13: ori $sp, $sp, 32767
Mem.cell['h00001004] = 32'h20100002;   // addi $16, $0, 2                 ; 14: addi $s0, $0, 2
Mem.cell['h00001008] = 32'h20110000;   // addi $17, $0, 0                 ; 15: addi $s1, $0, 0
Mem.cell['h0000100c] = 32'h20120002;   // addi $18, $0, 2                 ; 16: addi $s2, $0, 2
Mem.cell['h00001010] = 32'h20130000;   // addi $19, $0, 0                 ; 17: addi $s3, $0, 0
Mem.cell['h00001014] = 32'h34045000;   // ori $4, $0, 20480 [A]           ; 18: la $a0, A
Mem.cell['h00001018] = 32'h8c05501c;   // lw $5, 20508($0) [N]            ; 19: lw $a1, N
Mem.cell['h0000101c] = 32'h0c000409;   // jal 0x00001024 [sort]           ; 20: jal sort
Mem.cell['h00001020] = 32'h08000437;   // j 0x000010dc [exit]             ; 21: j exit
Mem.cell['h00001024] = 32'h23bdffec;   // addi $29, $29, -20              ; 24: addi $sp, $sp, -20
Mem.cell['h00001028] = 32'hafbf0010;   // sw $31, 16($29)                 ; 25: sw $ra, 16($sp)    #スタック上に$raを退避
Mem.cell['h0000102c] = 32'hafb3000c;   // sw $19, 12($29)                 ; 26: sw $s3, 12($sp)    #スタック上に$s3を退避
Mem.cell['h00001030] = 32'hafb20008;   // sw $18, 8($29)                  ; 27: sw $s2, 8($sp)     #スタック上に$s2を退避
Mem.cell['h00001034] = 32'hafb10004;   // sw $17, 4($29)                  ; 28: sw $s1, 4($sp)     #スタック上に$s1を退避
Mem.cell['h00001038] = 32'hafb00000;   // sw $16, 0($29)                  ; 29: sw $s0, 0($sp)     #スタック上に$s0を退避
Mem.cell['h0000103c] = 32'h00809025;   // or $18, $4, $0                  ; 31: or $s2,$a0,$0      #$a0を$s2に退避
Mem.cell['h00001040] = 32'h00a09825;   // or $19, $5, $0                  ; 32: or $s3,$a1,$0      #$a1を$s3に退避
Mem.cell['h00001044] = 32'h00008025;   // or $16, $0, $0                  ; 33: or $s0,$0,$0       # i = 0
Mem.cell['h00001048] = 32'h0213402a;   // slt $8, $16, $19                ; 35: slt $t0,$s0,$s3     # $t0 = (i < n) 1:0
Mem.cell['h0000104c] = 32'h11000013;   // beq $8, $0, 76 [exit1-0x0000104c]; 36: beq $t0,$0,exit1    # if $t0 == 0 then exit1
Mem.cell['h00001050] = 32'h2211ffff;   // addi $17, $16, -1               ; 38: addi $s1, $s0, -1   # j = i -1
Mem.cell['h00001054] = 32'h2a280000;   // slti $8, $17, 0                 ; 40: slti $t0, $s1, 0    # $t0 = (i < 0) 1:0
Mem.cell['h00001058] = 32'h11000001;   // beq $8, $0, 4 [cont-0x00001058] ; 41: beq $t0, $0, cont   #bne $t0, $0, exit2 変更点2
Mem.cell['h0000105c] = 32'h08000425;   // j 0x00001094 [exit2]            ; 42: j exit2
Mem.cell['h00001060] = 32'h02204825;   // or $9, $17, $0                  ; 44: or $t1, $s1, $0     # $t1 = i * 4
Mem.cell['h00001064] = 32'h01294820;   // add $9, $9, $9                  ; 45: add $t1, $t1, $t1   #変更点3
Mem.cell['h00001068] = 32'h01294820;   // add $9, $9, $9                  ; 46: add $t1, $t1, $t1
Mem.cell['h0000106c] = 32'h02495020;   // add $10, $18, $9                ; 48: add $t2, $s2, $t1   # $t2 = &(A[i])
Mem.cell['h00001070] = 32'h8d4b0000;   // lw $11, 0($10)                  ; 49: lw $t3, 0($t2)      # $t3 = A[i]
Mem.cell['h00001074] = 32'h8d4c0004;   // lw $12, 4($10)                  ; 50: lw $t4, 4($t2)      # $t4 = A[i+4]
Mem.cell['h00001078] = 32'h018b402a;   // slt $8, $12, $11                ; 52: slt $t0, $t4, $t3   # $t0 = (A[i]
Mem.cell['h0000107c] = 32'h11000005;   // beq $8, $0, 20 [exit2-0x0000107c]; 53: beq $t0, $0, exit2  # if $t0 == 0 then exit2
Mem.cell['h00001080] = 32'h02402025;   // or $4, $18, $0                  ; 54: or $a0, $s2, $0     # $a0 = $s2(&A)
Mem.cell['h00001084] = 32'h02202825;   // or $5, $17, $0                  ; 55: or $a1, $s1, $0     # $a1 = $s1(j)
Mem.cell['h00001088] = 32'h0c00042e;   // jal 0x000010b8 [swap]           ; 56: jal swap
Mem.cell['h0000108c] = 32'h2231ffff;   // addi $17, $17, -1               ; 58: addi $s1, $s1, -1   # j = j - 1
Mem.cell['h00001090] = 32'h08000415;   // j 0x00001054 [for2tst]          ; 59: j for2tst
Mem.cell['h00001094] = 32'h22100001;   // addi $16, $16, 1                ; 61: addi $s0, $s0, 1    # i = i + 1
Mem.cell['h00001098] = 32'h08000412;   // j 0x00001048 [for1tst]          ; 62: j for1tst
Mem.cell['h0000109c] = 32'h8fb00000;   // lw $16, 0($29)                  ; 64: lw $s0, 0($sp)      #スタックから$s0を復元
Mem.cell['h000010a0] = 32'h8fb10004;   // lw $17, 4($29)                  ; 65: lw $s1, 4($sp)      #スタックから$s1を復元
Mem.cell['h000010a4] = 32'h8fb20008;   // lw $18, 8($29)                  ; 66: lw $s2, 8($sp)      #スタックから$s2を復元
Mem.cell['h000010a8] = 32'h8fb3000c;   // lw $19, 12($29)                 ; 67: lw $s3, 12($sp)     #スタックから$s3を復元
Mem.cell['h000010ac] = 32'h8fbf0010;   // lw $31, 16($29)                 ; 68: lw $ra, 16($sp)     #スタックから$raを復元
Mem.cell['h000010b0] = 32'h23bd0014;   // addi $29, $29, 20               ; 69: addi $sp, $sp, 20  
Mem.cell['h000010b4] = 32'h03e00008;   // jr $31                          ; 70: jr $ra              #呼出し元のルーチンに戻る
Mem.cell['h000010b8] = 32'h00a04820;   // add $9, $5, $0                  ; 72: add $t1, $a1, $0   #変更点1
Mem.cell['h000010bc] = 32'h01294820;   // add $9, $9, $9                  ; 73: add $t1, $t1, $t1
Mem.cell['h000010c0] = 32'h01294820;   // add $9, $9, $9                  ; 74: add $t1, $t1, $t1
Mem.cell['h000010c4] = 32'h00894820;   // add $9, $4, $9                  ; 75: add $t1, $a0, $t1
Mem.cell['h000010c8] = 32'h8d280000;   // lw $8, 0($9)                    ; 76: lw $t0, 0($t1)
Mem.cell['h000010cc] = 32'h8d2a0004;   // lw $10, 4($9)                   ; 77: lw $t2, 4($t1)
Mem.cell['h000010d0] = 32'had2a0000;   // sw $10, 0($9)                   ; 78: sw $t2, 0($t1)
Mem.cell['h000010d4] = 32'had280004;   // sw $8, 4($9)                    ; 79: sw $t0, 4($t1)
Mem.cell['h000010d8] = 32'h03e00008;   // jr $31                          ; 80: jr $ra
Mem.cell['h000010dc] = 32'h08000437;   // j 0x000010dc [exit]             ; 82: j exit

// data segment
Mem.cell['h00005000] = 32'h00000001;
Mem.cell['h00005004] = 32'h00000002;
Mem.cell['h00005008] = 32'h00000006;
Mem.cell['h0000500c] = 32'h00000000;
Mem.cell['h00005010] = 32'h00000002;
Mem.cell['h00005014] = 32'h00000005;
Mem.cell['h00005018] = 32'h00000000;
Mem.cell['h0000501c] = 32'h00000007;

